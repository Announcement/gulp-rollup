{"version":3,"names":[],"mappings":"","sources":["getRollupConfiguration.js"],"sourcesContent":["import memory from 'rollup-plugin-memory'\r\nimport resolve from 'rollup-plugin-node-resolve'\r\nimport commonjs from 'rollup-plugin-commonjs'\r\n\r\nimport onwarn from './onwarn'\r\nimport select from './select'\r\n\r\n/**\r\n * Get configuration with optionals+defualts for rollup.rollup({options}) method.\r\n *\r\n * @function getRollupConfiguration\r\n *\r\n * @param {File} it - The Vinyl file configuring for.\r\n *\r\n * @returns {Object} Configuration for use with rollup.\r\n */\r\nexport default function (it, cacheObject, options) {\r\n  var defaults\r\n  var possible\r\n  var entry\r\n  var cache\r\n  var plugins\r\n  var object\r\n\r\n  entry = {\r\n    path: it.path,\r\n    contents: it.contents\r\n  }\r\n\r\n  cache = cacheObject[it.path]\r\n\r\n  plugins = [memory(), resolve(), commonjs({ sourceMap: false })]\r\n\r\n  defaults = {\r\n    entry,\r\n    cache,\r\n    onwarn,\r\n    plugins\r\n  }\r\n\r\n  possible = select([\r\n    'entry',\r\n    'cache',\r\n    'external',\r\n    'paths',\r\n    'onwarn',\r\n    'plugins',\r\n    'treeshake',\r\n    'acorn',\r\n    'context',\r\n    'moduleContext',\r\n    'legacy'\r\n  ])\r\n\r\n  assign()\r\n  repair()\r\n\r\n  return possible(object)\r\n\r\n  function assign () {\r\n    object = Object.assign(defaults, options)\r\n  }\r\n\r\n  function repair () {\r\n    repairEntry()\r\n    repairPlugins()\r\n  }\r\n\r\n  function repairEntry () {\r\n    object.entry = entry\r\n  }\r\n\r\n  function repairPlugins () {\r\n    object.plugins = plugins.concat(options.plugins || [])\r\n  }\r\n}\r\n"],"file":"getRollupConfiguration.js"}